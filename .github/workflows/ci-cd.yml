name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Raje@12345
          POSTGRES_DB: Prasha_care_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: Initialize test database
      run: |
        python init_db.py
        python seed_db.py
      env:
        DATABASE_URL: postgresql://postgres:Raje@12345@localhost:5432/Prasha_care_test
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        
    - name: Test with pytest
      run: |
        pytest --cov=app
      env:
        DATABASE_URL: postgresql://postgres:Raje@12345@localhost:5432/Prasha_care_test
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/mental-health:latest
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v2
    
    # This is a placeholder for your deployment steps
    # You would replace this with actual deployment to your hosting platform
    - name: Deploy application
      run: echo "Deploying application..."
      # Example for deploying to a server via SSH:
      # uses: appleboy/ssh-action@master
      # with:
      #   host: ${{ secrets.HOST }}
      #   username: ${{ secrets.USERNAME }}
      #   key: ${{ secrets.SSH_KEY }}
      #   script: |
      #     cd /path/to/app
      #     docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health:latest
      #     docker-compose down
      #     docker-compose up -d
